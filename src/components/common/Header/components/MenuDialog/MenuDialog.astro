---
import styles from "./MenuDialog.css";
import Icon from "@/components/common/Icon/Icon.astro";
import Contact from "@/components/common/Header/components/Contact/Contact.astro";
import GlobalNav from "@/components/common/Header/components/GlobalNav/GlobalNav.astro";
---

<menu-dialog>
  <button class={styles.openButton} id="menu-open" aria-expanded="false">
    <Icon type="menu" size="lg" />メニュー
  </button>
  <dialog aria-label="メニュー" class={styles.dialog}>
    <button class={styles.closeButton} id="menu-close">
      <Icon type="cancel" size="lg" />閉じる
    </button>
    <div>
      <GlobalNav />
    </div>
    <div>
      <Contact />
    </div>
  </dialog>
</menu-dialog>

<script>
  class MenuDialog extends HTMLElement {
    private dialog: HTMLDialogElement | null = null;
    private openButton: HTMLButtonElement | null = null;
    private closeButton: HTMLButtonElement | null = null;
    private openListener: EventListener = () => {};
    private closeListener: EventListener = () => {};

    constructor() {
      super();
    }

    connectedCallback() {
      this.dialog = this.querySelector("dialog");
      this.openButton = this.querySelector("button#menu-open");
      this.closeButton = this.querySelector("button#menu-close");
      this.openListener = this.openDialog.bind(this);
      this.closeListener = this.closeDialog.bind(this);

      if (
        this.dialog === null ||
        this.openButton === null ||
        this.closeButton === null
      ) {
        throw new Error("DOMが正しく設定されていません。");
      }

      this.openButton.addEventListener("click", this.openListener);
      this.closeButton.addEventListener("click", this.closeListener);
    }

    openDialog() {
      this.dialog?.showModal();

      document.body.style.overflow = "hidden";
    }

    closeDialog() {
      this.dialog?.close();

      document.body.style.overflow = "";
    }

    disconnectedCallback() {
      this.openButton?.removeEventListener("click", this.openListener);
      this.closeButton?.removeEventListener("click", this.closeListener);
    }
  }

  customElements.define("menu-dialog", MenuDialog);
</script>
