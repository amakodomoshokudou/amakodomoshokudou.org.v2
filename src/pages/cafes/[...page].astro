---
import type { GetStaticPaths } from "astro";
import Document from "../../components/layout/Document/Document.astro";
import Layout from "../../components/layout/Layout/Layout.astro";
import CafesPage from "../../components/page/Cafes/CafesPage.astro";
import type { BreadcrumbItems } from "../../components/ui/Breadcrumb/type";
import { site } from "../../consts/site";
import { fetchCafes } from "./_fetchers/microcms/cafe";
import { fetchAreas } from "./_fetchers/microcms/area";

export const getStaticPaths = (async ({ paginate }) => {
  const areas = await fetchAreas();
  const cafes = await fetchCafes();

  return paginate(cafes, {
    pageSize: site.cafesPerPage,
    props: {
      areas,
    },
  });
}) satisfies GetStaticPaths;

const props = Astro.props;
const { data: cafes, lastPage, currentPage } = props.page;
const { areas } = props;

const isFirstPage = currentPage === 1;

const baseTitle = "尼崎のこども食堂";

const breadcrumb: BreadcrumbItems = isFirstPage
  ? [
      {
        title: "トップページ",
        href: "/",
      },
      {
        title: baseTitle,
      },
    ]
  : [
      {
        title: "トップページ",
        href: "/",
      },
      {
        title: baseTitle,
        href: "/cafes/",
      },
      {
        title: `${currentPage}ページ目`,
      },
    ];
---

<Document
  title={isFirstPage ? baseTitle : `${baseTitle} ${currentPage}ページ目`}
  desc="掲載許可の取れた尼崎市内のこども食堂の一覧を掲載したページです。"
>
  <Layout breadcrumb={breadcrumb}>
    <CafesPage
      allAreas={areas}
      cafes={cafes}
      isFirstPage={isFirstPage}
      lastPage={lastPage}
      currentPage={currentPage}
    />
  </Layout>
</Document>
