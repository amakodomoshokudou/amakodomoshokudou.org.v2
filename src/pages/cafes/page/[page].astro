---
import CafeList from "@/components/pages/CafesPage/components/CafeList/CafeList.astro";
import CafeNav from "@/components/pages/CafesPage/components/CafeNav/CafeNav.astro";
import type { CafeNavItems } from "@/components/pages/CafesPage/components/CafeNav/types";
import CafesPage from "@/components/pages/CafesPage/CafesPage.astro";
import Pagination from "@/components/pages/CafesPage/components/Pagination/Pagination.astro";
import type { PaginationItems } from "@/components/pages/CafesPage/components/Pagination/types";
import PageTitle from "@/components/common/PageTitle/PageTitle.astro";
import { site } from "@/consts/site";
import type { BreadcrumbItems } from "@/components/common/Breadcrumb/types";
import Document from "@/components/layouts/Document/Document.astro";
import Layout from "@/components/layouts/Layout/Layout.astro";
import {
  generatePaginateDataWithoutFirstPage,
  generatePaginationItems,
} from "@/utils/page";
import { getAllAreas, getCafes } from "@/service/service";
import type { InferGetStaticPropsType } from "astro";

export const getStaticPaths = async () => {
  const { cafes, total } = await getCafes();
  const paginateData = generatePaginateDataWithoutFirstPage(
    cafes,
    site.cafesPerPage,
  );

  return paginateData.map(({ page, data: cafes }) => ({
    params: {
      page: page.toString(),
    },
    props: {
      page,
      total,
      cafes,
    },
  }));
};

export type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { cafes, page, total } = Astro.props;

const breadcrumb: BreadcrumbItems = [
  {
    title: "トップページ",
    href: "/",
  },
  {
    title: "尼崎のこども食堂一覧",
    href: "/cafes",
  },
  {
    title: `${page}ページ目`,
  },
];

const paginationItems: PaginationItems = generatePaginationItems(
  page,
  total,
  site.cafesPerPage,
);

const { areas } = await getAllAreas();

const cafeNavItems: CafeNavItems = [
  { title: "全ての地区", href: "/cafes", isActive: true, isCurrent: false },
  ...areas.map((area) => ({
    title: area.name,
    href: `/cafes/areas/${area.slug}`,
    isActive: false,
    isCurrent: false,
  })),
];
---

<Document
  title={`尼崎のこども食堂一覧 ${page}ページ目`}
  desc="掲載許可の取れた尼崎市のこども食堂一覧を掲載したページです。"
>
  <Layout breadcrumb={breadcrumb}>
    <CafesPage>
      <PageTitle slot="title" page={page}>尼崎のこども食堂一覧</PageTitle>
      <CafeNav slot="nav" items={cafeNavItems} />
      <CafeList slot="cafes" cafes={cafes} />
      {
        paginationItems.length > 1 && (
          <Pagination
            slot="pagination"
            baseUrl="/cafes"
            items={paginationItems}
          />
        )
      }
    </CafesPage>
  </Layout>
</Document>
