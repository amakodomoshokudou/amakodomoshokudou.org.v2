---
import DownloadLink from "@/components/DownloadLink/DownloadLink.astro";
import { site } from "@/consts/site";
import type { BreadcrumbItems } from "@/layouts/Breadcrumb/type";
import Document from "@/layouts/Document.astro";
import Layout from "@/layouts/Layout.astro";
import AreaFilter from "@/pages/cafes/_components/AreaFilter/AreaFilter.astro";
import CafeList from "@/pages/cafes/_components/CafeList/CafeList.astro";
import Pagination from "@/pages/cafes/_components/Pagination/Pagination.astro";
import { fetchAreas } from "@/pages/cafes/_utils/area";
import { fetchCafesByAreaId } from "@/pages/cafes/_utils/cafe";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const areas = await fetchAreas();

  const cafesByArea = await Promise.all(
    areas.map(async (area) => {
      const cafes = await fetchCafesByAreaId(area._id);

      return {
        area,
        cafes,
      };
    }),
  );

  return cafesByArea.flatMap(({ area, cafes }) => {
    return paginate(cafes, {
      pageSize: site.cafesPerPage,
      params: {
        area: area.slug,
      },
      props: {
        area,
      },
    });
  });
}) satisfies GetStaticPaths;

const props = Astro.props;

const { data: cafes, lastPage, currentPage } = props.page;
const { area } = props;

const isFirstPage = currentPage === 1;

const breadcrumb: BreadcrumbItems = isFirstPage
  ? [
      {
        title: "トップページ",
        href: "/",
      },
      {
        title: "尼崎のこども食堂",
        href: "/cafes/",
      },
      {
        title: `${area.name}地区のこども食堂`,
      },
    ]
  : [
      {
        title: "トップページ",
        href: "/",
      },
      {
        title: "尼崎のこども食堂",
        href: "/cafes/",
      },
      {
        title: `${area.name}地区のこども食堂`,
        href: `/cafes/areas/${area.slug}/`,
      },
      {
        title: `${currentPage}ページ目`,
      },
    ];
---

<Document
  title={isFirstPage
    ? `${area.name}地区のこども食堂`
    : `${area.name}地区のこども食堂 ${currentPage}ページ目`}
  desc={`掲載許可の取れた尼崎市${area.name}地区のこども食堂の一覧を掲載したページです。`}
>
  <Layout breadcrumb={breadcrumb}>
    <div
      class="grid grid-cols-[minmax(theme(spacing[20]),1fr)_minmax(0,theme(spacing[932]))_minmax(theme(spacing[20]),1fr)] lg:grid-cols-[minmax(theme(spacing[32]),1fr)_minmax(0,theme(spacing[932]))_minmax(theme(spacing[32]),1fr)]"
    >
      <div
        class="grid grid-cols-subgrid gap-y-20 border-t-8 border-t-accent py-32 [grid-column:1/-1] lg:gap-y-32 lg:py-52 [&>*]:[grid-column:2]"
      >
        <div class="grid gap-y-20">
          <h1 class="grid justify-items-start gap-y-12 font-bold">
            <span class="text-2xl lg:text-3xl"
              >{`${area.name}地区のこども食堂`}</span
            >
            {
              !isFirstPage && (
                <span class="rounded-sm bg-secondary-background text-xs px-8 py-4">
                  {currentPage}ページ目
                </span>
              )
            }
          </h1>
          <p class="text-sm">掲載許可の取れたこども食堂のみ掲載しています。</p>
        </div>
        <aside
          class="grid gap-y-12 rounded-xl border border-secondary-border p-12 lg:p-20"
        >
          <p class="font-bold">PDF版の資料</p>
          <p>
            <DownloadLink
              href="/media/documents/amakodomoshokudou-map.pdf"
              filename="amakodomoshokudou-map"
            >
              尼崎こども食堂マップ
            </DownloadLink>
          </p>
        </aside>
      </div>
      <div
        class="grid grid-cols-subgrid gap-y-32 bg-secondary-background py-32 [grid-column:1/-1] lg:gap-y-52 lg:py-52 [&>*]:[grid-column:2]"
      >
        <AreaFilter />
        <CafeList cafes={cafes} />
        {
          lastPage > 1 && (
            <Pagination
              current={currentPage}
              total={lastPage}
              baseUrl={`/cafes/areas/${area.slug}/`}
            />
          )
        }
      </div>
    </div>
  </Layout>
</Document>
