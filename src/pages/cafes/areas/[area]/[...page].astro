---
import type { GetStaticPaths } from "astro";
import Document from "../../../../components/layout/Document/Document.astro";
import Layout from "../../../../components/layout/Layout/Layout.astro";
import CafesByAreaPage from "../../../../components/page/Cafes/CafesByAreaPage.astro";
import type { BreadcrumbItems } from "../../../../components/ui/Breadcrumb/type";
import { site } from "../../../../consts/site";
import { fetchAreas } from "../../../../pages/cafes/_utils/area";
import { fetchCafesByAreaId } from "../../../../pages/cafes/_utils/cafe";

export const getStaticPaths = (async ({ paginate }) => {
  const areas = await fetchAreas();

  const cafesByArea = await Promise.all(
    areas.map(async (area) => {
      const cafes = await fetchCafesByAreaId(area._id);

      return {
        area,
        cafes,
      };
    }),
  );

  return cafesByArea.flatMap(({ area, cafes }) => {
    return paginate(cafes, {
      pageSize: site.cafesPerPage,
      params: {
        area: area.slug,
      },
      props: {
        area,
      },
    });
  });
}) satisfies GetStaticPaths;

const props = Astro.props;

const { data: cafes, lastPage, currentPage } = props.page;
const { area } = props;

const isFirstPage = currentPage === 1;

const parentTitle = "尼崎のこども食堂";

const baseTitle = `${area.name}地区のこども食堂`;

const breadcrumb: BreadcrumbItems = isFirstPage
  ? [
      {
        title: "トップページ",
        href: "/",
      },
      {
        title: parentTitle,
        href: "/cafes/",
      },
      {
        title: baseTitle,
      },
    ]
  : [
      {
        title: "トップページ",
        href: "/",
      },
      {
        title: parentTitle,
        href: "/cafes/",
      },
      {
        title: baseTitle,
        href: `/cafes/areas/${area.slug}/`,
      },
      {
        title: `${currentPage}ページ目`,
      },
    ];
---

<Document
  title={isFirstPage ? baseTitle : `${baseTitle} ${currentPage}ページ目`}
  desc={`掲載許可の取れた尼崎市${area.name}地区のこども食堂の一覧を掲載したページです。`}
>
  <Layout breadcrumb={breadcrumb}>
    <CafesByAreaPage
      cafes={cafes}
      area={area}
      isFirstPage={isFirstPage}
      lastPage={lastPage}
      currentPage={currentPage}
    />
  </Layout>
</Document>
